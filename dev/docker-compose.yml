name: argus-edge-sdk

services:
  init-mqtt:
    image: eclipse-mosquitto:2
    container_name: init-mqtt
    restart: "no"
    user: "0:0"
    env_file: .env
    volumes:
      - mosquitto-config:/mosquitto/config
      - certs:/certs             
      - mosquitto-data:/mosquitto/data
      - ./init-mqtt.sh:/init-mqtt.sh:ro
    entrypoint: ["/bin/sh", "/init-mqtt.sh"]

  mqtt:
    image: eclipse-mosquitto:2
    container_name: mqtt
    depends_on:
      init-mqtt:
        condition: service_completed_successfully
    restart: unless-stopped
    command: ["mosquitto", "-c", "/mosquitto/config/argus.conf"]
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_pub --cafile /certs/ca.crt -h localhost -p ${MQTT_PORT:-8883} -u ${MQTT_USERNAME:-devuser} -P ${MQTT_PASSWORD:-devpass} -t hc -m ok || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    ports:
      - "1883:1883"
      - "8883:8883"
    volumes:
      - mosquitto-config:/mosquitto/config
      - certs:/certs:ro
      - mosquitto-data:/mosquitto/data
      - mosquitto-log:/mosquitto/log

  mock-auth:
    build:
      context: ./mock-auth
      dockerfile: Dockerfile
    container_name: mock-auth
    depends_on:
      mqtt:
        condition: service_healthy
    restart: unless-stopped
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/healthz || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 20
      start_period: 20s
    ports:
      - "8080:8080"

  mock-sink:
    build:
      context: ./mock-sink
      dockerfile: Dockerfile
    container_name: mock-sink
    restart: unless-stopped
    depends_on:
      mqtt:
        condition: service_healthy
      mock-auth:
        condition: service_healthy
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pgrep mock-sink || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    ports:
      - "8081:8081"
    volumes:
      - ./data:/data
      - certs:/certs:ro

  mqtt-client:
    image: eclipse-mosquitto:2
    container_name: mqtt-client
    restart: unless-stopped
    env_file: .env
    depends_on:
      mqtt:
        condition: service_healthy
    command: ["sh", "-lc", "i=0; while true; do i=$$((i+1)); mosquitto_pub --cafile ${MQTT_CA_PATH:-/certs/ca.crt} -h ${MQTT_HOST?missing} -p ${MQTT_PORT?missing} -u ${MQTT_USERNAME?missing} -P ${MQTT_PASSWORD?missing} -t ${MQTT_TELEMETRY_TOPIC?missing} -m \"{\\\"temp\\\":25,\\\"pm25\\\":10,\\\"noise\\\":42,\\\"ts\\\":$$i}\" && echo sent; sleep 120; done"]
    volumes:
      - certs:/certs:ro

  mqtt-test:
    image: eclipse-mosquitto:2
    container_name: mqtt-test
    depends_on:
      mqtt:
        condition: service_healthy
    restart: "no"
    env_file: .env
    entrypoint: ["/bin/sh", "/mqtt-test.sh"]
    volumes:
      - ./mqtt-test.sh:/mqtt-test.sh:ro
      - certs:/certs:ro

networks:
  default:
    name: argus-edge-sdk-net

volumes:
  mosquitto-data:
  mosquitto-log:
  mosquitto-config:
  certs:
